# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from minLights.rpc import minion_device_pb2 as minknow_dot_rpc_dot_minion__device__pb2


class MinionDeviceServiceStub(object):
  """Interface to control MinION (and MinION-like) devices.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.change_settings = channel.unary_unary(
        '/ont.rpc.minion_device.MinionDeviceService/change_settings',
        request_serializer=minknow_dot_rpc_dot_minion__device__pb2.ChangeSettingsRequest.SerializeToString,
        response_deserializer=minknow_dot_rpc_dot_minion__device__pb2.ChangeSettingsResponse.FromString,
        )
    self.get_settings = channel.unary_unary(
        '/ont.rpc.minion_device.MinionDeviceService/get_settings',
        request_serializer=minknow_dot_rpc_dot_minion__device__pb2.GetSettingsRequest.SerializeToString,
        response_deserializer=minknow_dot_rpc_dot_minion__device__pb2.GetSettingsResponse.FromString,
        )


class MinionDeviceServiceServicer(object):
  """Interface to control MinION (and MinION-like) devices.
  """

  def change_settings(self, request, context):
    """Change the settings for the active device.

    If you omit a parameter, that setting will not be changed.

    This call is atomic: either all the settings will be applied, or none of them (if there is an
    error).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_settings(self, request, context):
    """Get the current settings for the active device.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MinionDeviceServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'change_settings': grpc.unary_unary_rpc_method_handler(
          servicer.change_settings,
          request_deserializer=minknow_dot_rpc_dot_minion__device__pb2.ChangeSettingsRequest.FromString,
          response_serializer=minknow_dot_rpc_dot_minion__device__pb2.ChangeSettingsResponse.SerializeToString,
      ),
      'get_settings': grpc.unary_unary_rpc_method_handler(
          servicer.get_settings,
          request_deserializer=minknow_dot_rpc_dot_minion__device__pb2.GetSettingsRequest.FromString,
          response_serializer=minknow_dot_rpc_dot_minion__device__pb2.GetSettingsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ont.rpc.minion_device.MinionDeviceService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
