# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: minknow/rpc/minion_device.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from minLights.rpc import rpc_options_pb2 as minknow_dot_rpc_dot_rpc__options__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='minknow/rpc/minion_device.proto',
  package='ont.rpc.minion_device',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x1fminknow/rpc/minion_device.proto\x12\x15ont.rpc.minion_device\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1dminknow/rpc/rpc_options.proto\",\n\x10TemperatureRange\x12\x0b\n\x03min\x18\x05 \x01(\x02\x12\x0b\n\x03max\x18\x06 \x01(\x02\"\x85\x02\n\x1bSamplingFrequencyParameters\x12\x15\n\rclock_divider\x18\x01 \x01(\r\x12\x18\n\x10integration_time\x18\x02 \x01(\r\x12R\n\x0b\x63lock_speed\x18\x03 \x01(\x0e\x32=.ont.rpc.minion_device.SamplingFrequencyParameters.ClockSpeed\"a\n\nClockSpeed\x12\x10\n\x0c\x43LOCK_128MHz\x10\x00\x12\x0f\n\x0b\x43LOCK_64MHz\x10\x01\x12\x0f\n\x0b\x43LOCK_32MHz\x10\x02\x12\x0f\n\x0b\x43LOCK_16MHz\x10\x03\x12\x0e\n\nCLOCK_8MHz\x10\x04\"\xe0\x15\n\x14MinionDeviceSettings\x12\x31\n\x0c\x62ias_voltage\x18\x01 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12\x38\n\x12sampling_frequency\x18\x02 \x01(\x0b\x32\x1c.google.protobuf.UInt32Value\x12V\n\x0e\x63hannel_config\x18\x03 \x03(\x0b\x32>.ont.rpc.minion_device.MinionDeviceSettings.ChannelConfigEntry\x12>\n\x1a\x65nable_temperature_control\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x43\n\x12temperature_target\x18\x05 \x01(\x0b\x32\'.ont.rpc.minion_device.TemperatureRange\x12W\n\rint_capacitor\x18\x06 \x01(\x0e\x32@.ont.rpc.minion_device.MinionDeviceSettings.IntegrationCapacitor\x12\x32\n\x0ctest_current\x18\x07 \x01(\x0b\x32\x1c.google.protobuf.UInt32Value\x12\x34\n\x0funblock_voltage\x18\x08 \x01(\x0b\x32\x1b.google.protobuf.Int32Value\x12\x35\n\x11overcurrent_limit\x18\n \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x36\n\x10samples_to_reset\x18\x0b \x01(\x0b\x32\x1c.google.protobuf.UInt32Value\x12\x41\n\x07th_gain\x18\x0c \x01(\x0e\x32\x30.ont.rpc.minion_device.MinionDeviceSettings.Gain\x12\x30\n\nsinc_delay\x18\r \x01(\x0b\x32\x1c.google.protobuf.UInt32Value\x12\x33\n\x0eth_sample_time\x18\x0e \x01(\x0b\x32\x1b.google.protobuf.FloatValue\x12\x33\n\x0eint_reset_time\x18\x0f \x01(\x0b\x32\x1b.google.protobuf.FloatValue\x12O\n\x0fsinc_decimation\x18\x10 \x01(\x0e\x32\x36.ont.rpc.minion_device.MinionDeviceSettings.Decimation\x12R\n\x0flow_pass_filter\x18\x11 \x01(\x0e\x32\x39.ont.rpc.minion_device.MinionDeviceSettings.LowPassFilter\x12V\n\x11non_overlap_clock\x18\x12 \x01(\x0e\x32;.ont.rpc.minion_device.MinionDeviceSettings.NonOverlapClock\x12\x32\n\x0c\x62ias_current\x18\x13 \x01(\x0b\x32\x1c.google.protobuf.UInt32Value\x12<\n\x16\x63ompensation_capacitor\x18\x14 \x01(\x0b\x32\x1c.google.protobuf.UInt32Value\x12U\n\x19sampling_frequency_params\x18\x15 \x01(\x0b\x32\x32.ont.rpc.minion_device.SamplingFrequencyParameters\x12\x35\n\x11\x65nable_asic_power\x18\x16 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12G\n\tfan_speed\x18\x17 \x01(\x0e\x32\x34.ont.rpc.minion_device.MinionDeviceSettings.FanSpeed\x12\x37\n\x13\x61llow_full_fan_stop\x18\x18 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x43\n\x1f\x65nable_soft_temperature_control\x18\x19 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12>\n\x1a\x65nable_bias_voltage_lookup\x18\x1a \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12!\n\x19\x62ias_voltage_lookup_table\x18\x1b \x03(\x05\x1ao\n\x12\x43hannelConfigEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12H\n\x05value\x18\x02 \x01(\x0e\x32\x39.ont.rpc.minion_device.MinionDeviceSettings.ChannelConfig:\x02\x38\x01\"-\n\x04Gain\x12\r\n\tGAIN_KEEP\x10\x00\x12\n\n\x06GAIN_1\x10\x01\x12\n\n\x06GAIN_5\x10\x02\"G\n\nDecimation\x12\x13\n\x0f\x44\x45\x43IMATION_KEEP\x10\x00\x12\x11\n\rDECIMATION_32\x10\x01\x12\x11\n\rDECIMATION_64\x10\x02\"y\n\rLowPassFilter\x12\x0c\n\x08LPF_KEEP\x10\x00\x12\x0c\n\x08LPF_5kHz\x10\x01\x12\r\n\tLPF_10kHz\x10\x02\x12\r\n\tLPF_20kHz\x10\x03\x12\r\n\tLPF_40kHz\x10\x04\x12\r\n\tLPF_80kHz\x10\x05\x12\x10\n\x0cLPF_DISABLED\x10\x06\"G\n\x0fNonOverlapClock\x12\x0c\n\x08NOC_KEEP\x10\x00\x12\x12\n\x0eNOC_1_HS_CLOCK\x10\x01\x12\x12\n\x0eNOC_2_HS_CLOCK\x10\x02\"q\n\x14IntegrationCapacitor\x12\x0f\n\x0bINTCAP_KEEP\x10\x00\x12\x11\n\rINTCAP_62_5fF\x10\x01\x12\x10\n\x0cINTCAP_250fF\x10\x02\x12\x0e\n\nINTCAP_1pF\x10\x03\x12\x13\n\x0fINTCAP_1_1875pF\x10\x04\"f\n\x08\x46\x61nSpeed\x12\x11\n\rFANSPEED_KEEP\x10\x00\x12\x10\n\x0c\x46\x41NSPEED_OFF\x10\x01\x12\x10\n\x0c\x46\x41NSPEED_LOW\x10\x02\x12\x11\n\rFANSPEED_HIGH\x10\x03\x12\x10\n\x0c\x46\x41NSPEED_MAX\x10\x04\"\xbd\x03\n\rChannelConfig\x12\x17\n\x13\x43HANNEL_CONFIG_KEEP\x10\x00\x12\x10\n\x0c\x44ISCONNECTED\x10\x01\x12\x17\n\x13WELL_1_BIAS_VOLTAGE\x10\x02\x12\x17\n\x13WELL_2_BIAS_VOLTAGE\x10\x03\x12\x17\n\x13WELL_3_BIAS_VOLTAGE\x10\x04\x12\x17\n\x13WELL_4_BIAS_VOLTAGE\x10\x05\x12\x10\n\x0cTEST_CURRENT\x10\x06\x12\x1a\n\x16WELL_1_UNBLOCK_VOLTAGE\x10\x07\x12\x1a\n\x16WELL_2_UNBLOCK_VOLTAGE\x10\x08\x12\x1a\n\x16WELL_3_UNBLOCK_VOLTAGE\x10\t\x12\x1a\n\x16WELL_4_UNBLOCK_VOLTAGE\x10\n\x12\x1b\n\x17TEST_CURRENT_VIA_WELL_1\x10\x0b\x12\x1b\n\x17TEST_CURRENT_VIA_WELL_2\x10\x0c\x12\x1b\n\x17TEST_CURRENT_VIA_WELL_3\x10\r\x12\x1b\n\x17TEST_CURRENT_VIA_WELL_4\x10\x0e\x12\x1b\n\x17GROUND_THROUGH_RESISTOR\x10\x0f\x12\n\n\x06GROUND\x10\x10\"\xb7\x01\n\x15\x43hangeSettingsRequest\x12\x43\n\x08settings\x18\x01 \x01(\x0b\x32+.ont.rpc.minion_device.MinionDeviceSettingsB\x04\x90\xb5\x18\x01\x12Y\n\x16\x63hannel_config_default\x18\x02 \x01(\x0e\x32\x39.ont.rpc.minion_device.MinionDeviceSettings.ChannelConfig\"\x18\n\x16\x43hangeSettingsResponse\"\x14\n\x12GetSettingsRequest\"Z\n\x13GetSettingsResponse\x12\x43\n\x08settings\x18\x01 \x01(\x0b\x32+.ont.rpc.minion_device.MinionDeviceSettingsB\x04\x90\xb5\x18\x01\x32\xf0\x01\n\x13MinionDeviceService\x12p\n\x0f\x63hange_settings\x12,.ont.rpc.minion_device.ChangeSettingsRequest\x1a-.ont.rpc.minion_device.ChangeSettingsResponse\"\x00\x12g\n\x0cget_settings\x12).ont.rpc.minion_device.GetSettingsRequest\x1a*.ont.rpc.minion_device.GetSettingsResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_wrappers__pb2.DESCRIPTOR,minknow_dot_rpc_dot_rpc__options__pb2.DESCRIPTOR,])



_SAMPLINGFREQUENCYPARAMETERS_CLOCKSPEED = _descriptor.EnumDescriptor(
  name='ClockSpeed',
  full_name='ont.rpc.minion_device.SamplingFrequencyParameters.ClockSpeed',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CLOCK_128MHz', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_64MHz', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_32MHz', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_16MHz', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCK_8MHz', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=332,
  serialized_end=429,
)
_sym_db.RegisterEnumDescriptor(_SAMPLINGFREQUENCYPARAMETERS_CLOCKSPEED)

_MINIONDEVICESETTINGS_GAIN = _descriptor.EnumDescriptor(
  name='Gain',
  full_name='ont.rpc.minion_device.MinionDeviceSettings.Gain',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GAIN_KEEP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_1', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAIN_5', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2235,
  serialized_end=2280,
)
_sym_db.RegisterEnumDescriptor(_MINIONDEVICESETTINGS_GAIN)

_MINIONDEVICESETTINGS_DECIMATION = _descriptor.EnumDescriptor(
  name='Decimation',
  full_name='ont.rpc.minion_device.MinionDeviceSettings.Decimation',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DECIMATION_KEEP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DECIMATION_32', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DECIMATION_64', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2282,
  serialized_end=2353,
)
_sym_db.RegisterEnumDescriptor(_MINIONDEVICESETTINGS_DECIMATION)

_MINIONDEVICESETTINGS_LOWPASSFILTER = _descriptor.EnumDescriptor(
  name='LowPassFilter',
  full_name='ont.rpc.minion_device.MinionDeviceSettings.LowPassFilter',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LPF_KEEP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LPF_5kHz', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LPF_10kHz', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LPF_20kHz', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LPF_40kHz', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LPF_80kHz', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LPF_DISABLED', index=6, number=6,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2355,
  serialized_end=2476,
)
_sym_db.RegisterEnumDescriptor(_MINIONDEVICESETTINGS_LOWPASSFILTER)

_MINIONDEVICESETTINGS_NONOVERLAPCLOCK = _descriptor.EnumDescriptor(
  name='NonOverlapClock',
  full_name='ont.rpc.minion_device.MinionDeviceSettings.NonOverlapClock',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NOC_KEEP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOC_1_HS_CLOCK', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOC_2_HS_CLOCK', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2478,
  serialized_end=2549,
)
_sym_db.RegisterEnumDescriptor(_MINIONDEVICESETTINGS_NONOVERLAPCLOCK)

_MINIONDEVICESETTINGS_INTEGRATIONCAPACITOR = _descriptor.EnumDescriptor(
  name='IntegrationCapacitor',
  full_name='ont.rpc.minion_device.MinionDeviceSettings.IntegrationCapacitor',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INTCAP_KEEP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTCAP_62_5fF', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTCAP_250fF', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTCAP_1pF', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTCAP_1_1875pF', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2551,
  serialized_end=2664,
)
_sym_db.RegisterEnumDescriptor(_MINIONDEVICESETTINGS_INTEGRATIONCAPACITOR)

_MINIONDEVICESETTINGS_FANSPEED = _descriptor.EnumDescriptor(
  name='FanSpeed',
  full_name='ont.rpc.minion_device.MinionDeviceSettings.FanSpeed',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FANSPEED_KEEP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FANSPEED_OFF', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FANSPEED_LOW', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FANSPEED_HIGH', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FANSPEED_MAX', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2666,
  serialized_end=2768,
)
_sym_db.RegisterEnumDescriptor(_MINIONDEVICESETTINGS_FANSPEED)

_MINIONDEVICESETTINGS_CHANNELCONFIG = _descriptor.EnumDescriptor(
  name='ChannelConfig',
  full_name='ont.rpc.minion_device.MinionDeviceSettings.ChannelConfig',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CHANNEL_CONFIG_KEEP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISCONNECTED', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WELL_1_BIAS_VOLTAGE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WELL_2_BIAS_VOLTAGE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WELL_3_BIAS_VOLTAGE', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WELL_4_BIAS_VOLTAGE', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_CURRENT', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WELL_1_UNBLOCK_VOLTAGE', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WELL_2_UNBLOCK_VOLTAGE', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WELL_3_UNBLOCK_VOLTAGE', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WELL_4_UNBLOCK_VOLTAGE', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_CURRENT_VIA_WELL_1', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_CURRENT_VIA_WELL_2', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_CURRENT_VIA_WELL_3', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TEST_CURRENT_VIA_WELL_4', index=14, number=14,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GROUND_THROUGH_RESISTOR', index=15, number=15,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GROUND', index=16, number=16,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2771,
  serialized_end=3216,
)
_sym_db.RegisterEnumDescriptor(_MINIONDEVICESETTINGS_CHANNELCONFIG)


_TEMPERATURERANGE = _descriptor.Descriptor(
  name='TemperatureRange',
  full_name='ont.rpc.minion_device.TemperatureRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='ont.rpc.minion_device.TemperatureRange.min', index=0,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max', full_name='ont.rpc.minion_device.TemperatureRange.max', index=1,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=121,
  serialized_end=165,
)


_SAMPLINGFREQUENCYPARAMETERS = _descriptor.Descriptor(
  name='SamplingFrequencyParameters',
  full_name='ont.rpc.minion_device.SamplingFrequencyParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='clock_divider', full_name='ont.rpc.minion_device.SamplingFrequencyParameters.clock_divider', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='integration_time', full_name='ont.rpc.minion_device.SamplingFrequencyParameters.integration_time', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clock_speed', full_name='ont.rpc.minion_device.SamplingFrequencyParameters.clock_speed', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SAMPLINGFREQUENCYPARAMETERS_CLOCKSPEED,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=168,
  serialized_end=429,
)


_MINIONDEVICESETTINGS_CHANNELCONFIGENTRY = _descriptor.Descriptor(
  name='ChannelConfigEntry',
  full_name='ont.rpc.minion_device.MinionDeviceSettings.ChannelConfigEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ont.rpc.minion_device.MinionDeviceSettings.ChannelConfigEntry.key', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='ont.rpc.minion_device.MinionDeviceSettings.ChannelConfigEntry.value', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2122,
  serialized_end=2233,
)

_MINIONDEVICESETTINGS = _descriptor.Descriptor(
  name='MinionDeviceSettings',
  full_name='ont.rpc.minion_device.MinionDeviceSettings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bias_voltage', full_name='ont.rpc.minion_device.MinionDeviceSettings.bias_voltage', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sampling_frequency', full_name='ont.rpc.minion_device.MinionDeviceSettings.sampling_frequency', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_config', full_name='ont.rpc.minion_device.MinionDeviceSettings.channel_config', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_temperature_control', full_name='ont.rpc.minion_device.MinionDeviceSettings.enable_temperature_control', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='temperature_target', full_name='ont.rpc.minion_device.MinionDeviceSettings.temperature_target', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='int_capacitor', full_name='ont.rpc.minion_device.MinionDeviceSettings.int_capacitor', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='test_current', full_name='ont.rpc.minion_device.MinionDeviceSettings.test_current', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unblock_voltage', full_name='ont.rpc.minion_device.MinionDeviceSettings.unblock_voltage', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='overcurrent_limit', full_name='ont.rpc.minion_device.MinionDeviceSettings.overcurrent_limit', index=8,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='samples_to_reset', full_name='ont.rpc.minion_device.MinionDeviceSettings.samples_to_reset', index=9,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='th_gain', full_name='ont.rpc.minion_device.MinionDeviceSettings.th_gain', index=10,
      number=12, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sinc_delay', full_name='ont.rpc.minion_device.MinionDeviceSettings.sinc_delay', index=11,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='th_sample_time', full_name='ont.rpc.minion_device.MinionDeviceSettings.th_sample_time', index=12,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='int_reset_time', full_name='ont.rpc.minion_device.MinionDeviceSettings.int_reset_time', index=13,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sinc_decimation', full_name='ont.rpc.minion_device.MinionDeviceSettings.sinc_decimation', index=14,
      number=16, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='low_pass_filter', full_name='ont.rpc.minion_device.MinionDeviceSettings.low_pass_filter', index=15,
      number=17, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='non_overlap_clock', full_name='ont.rpc.minion_device.MinionDeviceSettings.non_overlap_clock', index=16,
      number=18, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bias_current', full_name='ont.rpc.minion_device.MinionDeviceSettings.bias_current', index=17,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='compensation_capacitor', full_name='ont.rpc.minion_device.MinionDeviceSettings.compensation_capacitor', index=18,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sampling_frequency_params', full_name='ont.rpc.minion_device.MinionDeviceSettings.sampling_frequency_params', index=19,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_asic_power', full_name='ont.rpc.minion_device.MinionDeviceSettings.enable_asic_power', index=20,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fan_speed', full_name='ont.rpc.minion_device.MinionDeviceSettings.fan_speed', index=21,
      number=23, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='allow_full_fan_stop', full_name='ont.rpc.minion_device.MinionDeviceSettings.allow_full_fan_stop', index=22,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_soft_temperature_control', full_name='ont.rpc.minion_device.MinionDeviceSettings.enable_soft_temperature_control', index=23,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_bias_voltage_lookup', full_name='ont.rpc.minion_device.MinionDeviceSettings.enable_bias_voltage_lookup', index=24,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bias_voltage_lookup_table', full_name='ont.rpc.minion_device.MinionDeviceSettings.bias_voltage_lookup_table', index=25,
      number=27, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MINIONDEVICESETTINGS_CHANNELCONFIGENTRY, ],
  enum_types=[
    _MINIONDEVICESETTINGS_GAIN,
    _MINIONDEVICESETTINGS_DECIMATION,
    _MINIONDEVICESETTINGS_LOWPASSFILTER,
    _MINIONDEVICESETTINGS_NONOVERLAPCLOCK,
    _MINIONDEVICESETTINGS_INTEGRATIONCAPACITOR,
    _MINIONDEVICESETTINGS_FANSPEED,
    _MINIONDEVICESETTINGS_CHANNELCONFIG,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=432,
  serialized_end=3216,
)


_CHANGESETTINGSREQUEST = _descriptor.Descriptor(
  name='ChangeSettingsRequest',
  full_name='ont.rpc.minion_device.ChangeSettingsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='settings', full_name='ont.rpc.minion_device.ChangeSettingsRequest.settings', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\220\265\030\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_config_default', full_name='ont.rpc.minion_device.ChangeSettingsRequest.channel_config_default', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3219,
  serialized_end=3402,
)


_CHANGESETTINGSRESPONSE = _descriptor.Descriptor(
  name='ChangeSettingsResponse',
  full_name='ont.rpc.minion_device.ChangeSettingsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3404,
  serialized_end=3428,
)


_GETSETTINGSREQUEST = _descriptor.Descriptor(
  name='GetSettingsRequest',
  full_name='ont.rpc.minion_device.GetSettingsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3430,
  serialized_end=3450,
)


_GETSETTINGSRESPONSE = _descriptor.Descriptor(
  name='GetSettingsResponse',
  full_name='ont.rpc.minion_device.GetSettingsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='settings', full_name='ont.rpc.minion_device.GetSettingsResponse.settings', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\220\265\030\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3452,
  serialized_end=3542,
)

_SAMPLINGFREQUENCYPARAMETERS.fields_by_name['clock_speed'].enum_type = _SAMPLINGFREQUENCYPARAMETERS_CLOCKSPEED
_SAMPLINGFREQUENCYPARAMETERS_CLOCKSPEED.containing_type = _SAMPLINGFREQUENCYPARAMETERS
_MINIONDEVICESETTINGS_CHANNELCONFIGENTRY.fields_by_name['value'].enum_type = _MINIONDEVICESETTINGS_CHANNELCONFIG
_MINIONDEVICESETTINGS_CHANNELCONFIGENTRY.containing_type = _MINIONDEVICESETTINGS
_MINIONDEVICESETTINGS.fields_by_name['bias_voltage'].message_type = google_dot_protobuf_dot_wrappers__pb2._INT32VALUE
_MINIONDEVICESETTINGS.fields_by_name['sampling_frequency'].message_type = google_dot_protobuf_dot_wrappers__pb2._UINT32VALUE
_MINIONDEVICESETTINGS.fields_by_name['channel_config'].message_type = _MINIONDEVICESETTINGS_CHANNELCONFIGENTRY
_MINIONDEVICESETTINGS.fields_by_name['enable_temperature_control'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_MINIONDEVICESETTINGS.fields_by_name['temperature_target'].message_type = _TEMPERATURERANGE
_MINIONDEVICESETTINGS.fields_by_name['int_capacitor'].enum_type = _MINIONDEVICESETTINGS_INTEGRATIONCAPACITOR
_MINIONDEVICESETTINGS.fields_by_name['test_current'].message_type = google_dot_protobuf_dot_wrappers__pb2._UINT32VALUE
_MINIONDEVICESETTINGS.fields_by_name['unblock_voltage'].message_type = google_dot_protobuf_dot_wrappers__pb2._INT32VALUE
_MINIONDEVICESETTINGS.fields_by_name['overcurrent_limit'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_MINIONDEVICESETTINGS.fields_by_name['samples_to_reset'].message_type = google_dot_protobuf_dot_wrappers__pb2._UINT32VALUE
_MINIONDEVICESETTINGS.fields_by_name['th_gain'].enum_type = _MINIONDEVICESETTINGS_GAIN
_MINIONDEVICESETTINGS.fields_by_name['sinc_delay'].message_type = google_dot_protobuf_dot_wrappers__pb2._UINT32VALUE
_MINIONDEVICESETTINGS.fields_by_name['th_sample_time'].message_type = google_dot_protobuf_dot_wrappers__pb2._FLOATVALUE
_MINIONDEVICESETTINGS.fields_by_name['int_reset_time'].message_type = google_dot_protobuf_dot_wrappers__pb2._FLOATVALUE
_MINIONDEVICESETTINGS.fields_by_name['sinc_decimation'].enum_type = _MINIONDEVICESETTINGS_DECIMATION
_MINIONDEVICESETTINGS.fields_by_name['low_pass_filter'].enum_type = _MINIONDEVICESETTINGS_LOWPASSFILTER
_MINIONDEVICESETTINGS.fields_by_name['non_overlap_clock'].enum_type = _MINIONDEVICESETTINGS_NONOVERLAPCLOCK
_MINIONDEVICESETTINGS.fields_by_name['bias_current'].message_type = google_dot_protobuf_dot_wrappers__pb2._UINT32VALUE
_MINIONDEVICESETTINGS.fields_by_name['compensation_capacitor'].message_type = google_dot_protobuf_dot_wrappers__pb2._UINT32VALUE
_MINIONDEVICESETTINGS.fields_by_name['sampling_frequency_params'].message_type = _SAMPLINGFREQUENCYPARAMETERS
_MINIONDEVICESETTINGS.fields_by_name['enable_asic_power'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_MINIONDEVICESETTINGS.fields_by_name['fan_speed'].enum_type = _MINIONDEVICESETTINGS_FANSPEED
_MINIONDEVICESETTINGS.fields_by_name['allow_full_fan_stop'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_MINIONDEVICESETTINGS.fields_by_name['enable_soft_temperature_control'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_MINIONDEVICESETTINGS.fields_by_name['enable_bias_voltage_lookup'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_MINIONDEVICESETTINGS_GAIN.containing_type = _MINIONDEVICESETTINGS
_MINIONDEVICESETTINGS_DECIMATION.containing_type = _MINIONDEVICESETTINGS
_MINIONDEVICESETTINGS_LOWPASSFILTER.containing_type = _MINIONDEVICESETTINGS
_MINIONDEVICESETTINGS_NONOVERLAPCLOCK.containing_type = _MINIONDEVICESETTINGS
_MINIONDEVICESETTINGS_INTEGRATIONCAPACITOR.containing_type = _MINIONDEVICESETTINGS
_MINIONDEVICESETTINGS_FANSPEED.containing_type = _MINIONDEVICESETTINGS
_MINIONDEVICESETTINGS_CHANNELCONFIG.containing_type = _MINIONDEVICESETTINGS
_CHANGESETTINGSREQUEST.fields_by_name['settings'].message_type = _MINIONDEVICESETTINGS
_CHANGESETTINGSREQUEST.fields_by_name['channel_config_default'].enum_type = _MINIONDEVICESETTINGS_CHANNELCONFIG
_GETSETTINGSRESPONSE.fields_by_name['settings'].message_type = _MINIONDEVICESETTINGS
DESCRIPTOR.message_types_by_name['TemperatureRange'] = _TEMPERATURERANGE
DESCRIPTOR.message_types_by_name['SamplingFrequencyParameters'] = _SAMPLINGFREQUENCYPARAMETERS
DESCRIPTOR.message_types_by_name['MinionDeviceSettings'] = _MINIONDEVICESETTINGS
DESCRIPTOR.message_types_by_name['ChangeSettingsRequest'] = _CHANGESETTINGSREQUEST
DESCRIPTOR.message_types_by_name['ChangeSettingsResponse'] = _CHANGESETTINGSRESPONSE
DESCRIPTOR.message_types_by_name['GetSettingsRequest'] = _GETSETTINGSREQUEST
DESCRIPTOR.message_types_by_name['GetSettingsResponse'] = _GETSETTINGSRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TemperatureRange = _reflection.GeneratedProtocolMessageType('TemperatureRange', (_message.Message,), dict(
  DESCRIPTOR = _TEMPERATURERANGE,
  __module__ = 'minLights.rpc.minion_device_pb2'
  # @@protoc_insertion_point(class_scope:ont.rpc.minion_device.TemperatureRange)
  ))
_sym_db.RegisterMessage(TemperatureRange)

SamplingFrequencyParameters = _reflection.GeneratedProtocolMessageType('SamplingFrequencyParameters', (_message.Message,), dict(
  DESCRIPTOR = _SAMPLINGFREQUENCYPARAMETERS,
  __module__ = 'minLights.rpc.minion_device_pb2'
  # @@protoc_insertion_point(class_scope:ont.rpc.minion_device.SamplingFrequencyParameters)
  ))
_sym_db.RegisterMessage(SamplingFrequencyParameters)

MinionDeviceSettings = _reflection.GeneratedProtocolMessageType('MinionDeviceSettings', (_message.Message,), dict(

  ChannelConfigEntry = _reflection.GeneratedProtocolMessageType('ChannelConfigEntry', (_message.Message,), dict(
    DESCRIPTOR = _MINIONDEVICESETTINGS_CHANNELCONFIGENTRY,
    __module__ = 'minLights.rpc.minion_device_pb2'
    # @@protoc_insertion_point(class_scope:ont.rpc.minion_device.MinionDeviceSettings.ChannelConfigEntry)
    ))
  ,
  DESCRIPTOR = _MINIONDEVICESETTINGS,
  __module__ = 'minLights.rpc.minion_device_pb2'
  # @@protoc_insertion_point(class_scope:ont.rpc.minion_device.MinionDeviceSettings)
  ))
_sym_db.RegisterMessage(MinionDeviceSettings)
_sym_db.RegisterMessage(MinionDeviceSettings.ChannelConfigEntry)

ChangeSettingsRequest = _reflection.GeneratedProtocolMessageType('ChangeSettingsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHANGESETTINGSREQUEST,
  __module__ = 'minLights.rpc.minion_device_pb2'
  # @@protoc_insertion_point(class_scope:ont.rpc.minion_device.ChangeSettingsRequest)
  ))
_sym_db.RegisterMessage(ChangeSettingsRequest)

ChangeSettingsResponse = _reflection.GeneratedProtocolMessageType('ChangeSettingsResponse', (_message.Message,), dict(
  DESCRIPTOR = _CHANGESETTINGSRESPONSE,
  __module__ = 'minLights.rpc.minion_device_pb2'
  # @@protoc_insertion_point(class_scope:ont.rpc.minion_device.ChangeSettingsResponse)
  ))
_sym_db.RegisterMessage(ChangeSettingsResponse)

GetSettingsRequest = _reflection.GeneratedProtocolMessageType('GetSettingsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETSETTINGSREQUEST,
  __module__ = 'minLights.rpc.minion_device_pb2'
  # @@protoc_insertion_point(class_scope:ont.rpc.minion_device.GetSettingsRequest)
  ))
_sym_db.RegisterMessage(GetSettingsRequest)

GetSettingsResponse = _reflection.GeneratedProtocolMessageType('GetSettingsResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETSETTINGSRESPONSE,
  __module__ = 'minLights.rpc.minion_device_pb2'
  # @@protoc_insertion_point(class_scope:ont.rpc.minion_device.GetSettingsResponse)
  ))
_sym_db.RegisterMessage(GetSettingsResponse)


_MINIONDEVICESETTINGS_CHANNELCONFIGENTRY._options = None
_CHANGESETTINGSREQUEST.fields_by_name['settings']._options = None
_GETSETTINGSRESPONSE.fields_by_name['settings']._options = None

_MINIONDEVICESERVICE = _descriptor.ServiceDescriptor(
  name='MinionDeviceService',
  full_name='ont.rpc.minion_device.MinionDeviceService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=3545,
  serialized_end=3785,
  methods=[
  _descriptor.MethodDescriptor(
    name='change_settings',
    full_name='ont.rpc.minion_device.MinionDeviceService.change_settings',
    index=0,
    containing_service=None,
    input_type=_CHANGESETTINGSREQUEST,
    output_type=_CHANGESETTINGSRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='get_settings',
    full_name='ont.rpc.minion_device.MinionDeviceService.get_settings',
    index=1,
    containing_service=None,
    input_type=_GETSETTINGSREQUEST,
    output_type=_GETSETTINGSRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MINIONDEVICESERVICE)

DESCRIPTOR.services_by_name['MinionDeviceService'] = _MINIONDEVICESERVICE

# @@protoc_insertion_point(module_scope)
